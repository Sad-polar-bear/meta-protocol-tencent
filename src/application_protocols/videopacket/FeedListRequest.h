// **********************************************************************
// This file was generated by a TARS parser!
// **********************************************************************

#ifndef __T_H_
#define __T_H_

#include <map>
#include <string>
#include <vector>
#include "src/application_protocols/videopacket/jce/Jce.h"
using namespace std;


namespace cctvjce {
    struct FeedListRequest : public taf::JceStructBase
    {
    public:
        static string className()
        {
            return "cctvjce.FeedListRequest";
        }
        static string MD5()
        {
            return "325d87d477a8cf7a6468ed6bb39da964";
        }
        FeedListRequest()
        :channelId(""),scene("")
        {
        }
        void resetDefautlt()
        {
            channelId = "";
            scene = "";
        }
        template<typename WriterT>
        void writeTo(taf::JceOutputStream<WriterT>& os) const
        {
            os.write(channelId, 0);
            os.write(scene, 1);
        }
        template<typename ReaderT>
        void readFrom(taf::JceInputStream<ReaderT>& is)
        {
            resetDefautlt();
            is.read(channelId, 0, true);
            is.read(scene, 1, false);
        }
        ostream& display(ostream& os, int _level=0) const
        {
            taf::JceDisplayer _ds(os, _level);
            _ds.display(channelId,"channelId");
            _ds.display(scene,"scene");
            return os;
        }
        ostream& displaySimple(ostream& os, int _level=0) const
        {
            taf::JceDisplayer _ds(os, _level);
            _ds.displaySimple(channelId, true);
            _ds.displaySimple(scene, false);
            return os;
        }
    public:
        std::string channelId;
        std::string scene;
    };
    inline bool operator==(const FeedListRequest&l, const FeedListRequest&r)
    {
        return l.channelId == r.channelId && l.scene == r.scene;
    }
    inline bool operator!=(const FeedListRequest&l, const FeedListRequest&r)
    {
        return !(l == r);
    }



#if SPP_RPC_VERSION > 0
#endif // SPP_RPC_VERSION > 0
}  // namespace cctvjce



#endif
